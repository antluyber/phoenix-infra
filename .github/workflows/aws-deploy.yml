name: deploy aws cdk

#on: [push, workflow_dispatch]
on: [workflow_dispatch]
#on:
  #push:
    #branches: [main]
  #pull_request:
    #branches: [main]

jobs:
  deploy_vpc:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: accounts/finfare-dev/us-east-1/vpc/dev-vpc
    steps:
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: 'us-east-1'

      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install npm
        run: sudo apt update -y && sudo apt install nodejs npm -y

      - name: Install AWS CDK
        run: sudo npm install -g aws-cdk

      - name: Install Requirements
        run: pip3 install -r requirements.txt

      - name: Synthesize Application
        run: cdk synth
      
      - name: Deploy 
        run: cdk deploy --all --require-approval never


  aws_cdk:
    runs-on: ubuntu-latest
    needs: deploy_vpc
    defaults:
      run:
        working-directory: accounts/finfare-dev/us-east-1/ecs/fargate-service-with-autoscaling
    steps:
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: 'us-east-1'

      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install npm
        run: sudo apt update -y && sudo apt install nodejs npm -y

      - name: Install AWS CDK
        run: sudo npm install -g aws-cdk

      - name: Install Requirements
        run: pip3 install -r requirements.txt

      - name: Synthesize Application
        run: cdk synth

      - name: Deploy
        run: cdk deploy --all --require-approval never