{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/Resource"
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet1/Subnet"
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet1/RouteTable"
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "VpcPublicSubnet1EIPD7E02669": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet1/EIP"
   }
  },
  "VpcPublicSubnet1NATGateway4D7517AA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet1EIPD7E02669",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet1/NATGateway"
   }
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet2/Subnet"
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet2/RouteTable"
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "VpcPublicSubnet2EIP3C605A87": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet2/EIP"
   }
  },
  "VpcPublicSubnet2NATGateway9182C01D": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet2EIP3C605A87",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PublicSubnet2/NATGateway"
   }
  },
  "VpcPrivateSubnet1Subnet536B997A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet1/Subnet"
   }
  },
  "VpcPrivateSubnet1RouteTableB2C5B500": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet1/RouteTable"
   }
  },
  "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "VpcPrivateSubnet2Subnet3788AAA1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet2/Subnet"
   }
  },
  "VpcPrivateSubnet2RouteTableA678073B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet2/RouteTable"
   }
  },
  "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "VpcPrivateSubnet2DefaultRoute060D2087": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "aws-fargate-application-autoscaling/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/IGW"
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/Vpc/VPCGW"
   }
  },
  "fargateserviceautoscalingD107CF93": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/fargate-service-autoscaling/Resource"
   }
  },
  "sampleappLBBDE1D276": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "Subnets": [
     {
      "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
     },
     {
      "Ref": "VpcPublicSubnet2Subnet691E08A3"
     }
    ],
    "Type": "network"
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet2DefaultRoute97F91067"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/LB/Resource"
   }
  },
  "sampleappLBPublicListenerC4DF6480": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "sampleappLBPublicListenerECSGroup525A567D"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "sampleappLBBDE1D276"
    },
    "Port": 80,
    "Protocol": "TCP"
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/LB/PublicListener/Resource"
   }
  },
  "sampleappLBPublicListenerECSGroup525A567D": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "TCP",
    "TargetType": "ip",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "sampleappTaskDefTaskRoleB530CAC0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/TaskDef/TaskRole/Resource"
   }
  },
  "sampleappTaskDef6BF75736": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": "497928199462.dkr.ecr.us-east-1.amazonaws.com/react-app-docker-demo",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "sampleappTaskDefwebLogGroup34BE8C79"
        },
        "awslogs-stream-prefix": "sample-app",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "web",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "sampleappTaskDefExecutionRoleAD6F4C40",
      "Arn"
     ]
    },
    "Family": "awsfargateapplicationautoscalingsampleappTaskDefBB7514EF",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "sampleappTaskDefTaskRoleB530CAC0",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/TaskDef/Resource"
   }
  },
  "sampleappTaskDefwebLogGroup34BE8C79": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/TaskDef/web/LogGroup/Resource"
   }
  },
  "sampleappTaskDefExecutionRoleAD6F4C40": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/TaskDef/ExecutionRole/Resource"
   }
  },
  "sampleappTaskDefExecutionRoleDefaultPolicy0AD15374": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "sampleappTaskDefwebLogGroup34BE8C79",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "sampleappTaskDefExecutionRoleDefaultPolicy0AD15374",
    "Roles": [
     {
      "Ref": "sampleappTaskDefExecutionRoleAD6F4C40"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/TaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "sampleappServiceE7504FDB": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "fargateserviceautoscalingD107CF93"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "web",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "sampleappLBPublicListenerECSGroup525A567D"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "sampleappServiceSecurityGroup0ABF0D21",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "VpcPrivateSubnet1Subnet536B997A"
       },
       {
        "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "sampleappTaskDef6BF75736"
    }
   },
   "DependsOn": [
    "sampleappLBPublicListenerECSGroup525A567D",
    "sampleappLBPublicListenerC4DF6480"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/Service/Service"
   }
  },
  "sampleappServiceSecurityGroup0ABF0D21": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "aws-fargate-application-autoscaling/sample-app/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": "Allow http inbound from VPC",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/Service/SecurityGroup/Resource"
   }
  },
  "sampleappServiceTaskCountTargetE827DC30": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 2,
    "MinCapacity": 1,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/",
       {
        "Ref": "fargateserviceautoscalingD107CF93"
       },
       "/",
       {
        "Fn::GetAtt": [
         "sampleappServiceE7504FDB",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/Service/TaskCount/Target/Resource"
   }
  },
  "sampleappServiceTaskCountTargetCpuScalingF4452F80": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "awsfargateapplicationautoscalingsampleappServiceTaskCountTargetCpuScalingD4ABC44A",
    "PolicyType": "TargetTrackingScaling",
    "ScalingTargetId": {
     "Ref": "sampleappServiceTaskCountTargetE827DC30"
    },
    "TargetTrackingScalingPolicyConfiguration": {
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
     },
     "ScaleInCooldown": 60,
     "ScaleOutCooldown": 60,
     "TargetValue": 50
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/sample-app/Service/TaskCount/Target/CpuScaling/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VSTU/DMAz9LdyzAOXEEcaHkBBU68QVuVkYZl1SJc6mqep/x0nadYOTX15sx34vhSwKeXUBez9Tq82swVp2FYHaCKY+O60K2X20Ssy/zEc5F2WoG1RVqI2myE1oYQPpJdSNnviJu/PeKgRCa47JETy+lDG8AT0D6T0cROlwx3Bq/GJIO8ZjQp5kON0Rz/q91YZEpVVwSIdnZ0ObZjgleqGVl928CZ7bxesRPoFbQxzTbx70Fxoch/zLWEOARrsTbqittNuhyosPsFLQxMVjk7kNhtIAny1Q3MbLN0176zavFlb3nGmUXv1pphvwhKrhjDploFnv2I3/lWmds/OYg7yhGe5HPNwt+TUWdRTr5NgLhK3sFjZbmWJp2fakfUa9aOya9Xy162OLEfcC2paTktsQyHrWgofnj3UUJT6W5Dpnclg6/n9cUOW66e0zou/FQnsbXBb+PVAb8k88Ydm0VbKqF+WBvq25vJG38rq4+PGIM8e+4FbLRY6/akpYmgwDAAA="
   },
   "Metadata": {
    "aws:cdk:path": "aws-fargate-application-autoscaling/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "sampleappLoadBalancerDNS19B00097": {
   "Value": {
    "Fn::GetAtt": [
     "sampleappLBBDE1D276",
     "DNSName"
    ]
   }
  },
  "LoadBalancerDNS": {
   "Value": {
    "Fn::GetAtt": [
     "sampleappLBBDE1D276",
     "DNSName"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}